The R Ecosystem
========================================================
author: Pier Lorenzo Paracchini
date: 20.09.2017
width: 1440
height: 900
font-import: http://fonts.googleapis.com/css?family=Risque
font-family: 'Risque'
transition: concave

The R Ecosystem: an overview
========================================================

<img src="imgs/the_toolbox.png" alt="R Ecosystem">

The R environment
========================================================

The R environment is divided in 2 different conceptual parts:

- the _"base"_ R system, what is installed when installing R from __CRAN__, and
- everything else.

The _"base"_ R system contains the core functionality required to run R
- the `base` package, and
- other packages like  `utils, stats, datasets, graphics, grDevices, grid, methods, tools, parallel, compiler, splines, tcltk, stats4`

More functionality can be added to the R environment installing more packages.

What is a package?
========================================================

A __package__ is essentially

- a __library__ designed to accomplish a task or a set of tasks. E.g.
    - the `tidyr` package provides functionality for data tidying,
    - the `ggplot2` package provides functionality for plotting and visualization, ...

Packages can be found in the following repositories
- Comprehensive R Archive Network ([CRAN](https://cran.r-project.org/))
- [BioConductor](http://bioconductor.org/)
- GitHub/ BitBucket reposotories (an example [tidyr](https://github.com/tidyverse/tidyr))

Package lifecycle
========================================================

- __Install__/ __update__ a package
- __Load__/ __unload__ a package
- __Remove__ a package

<img src="imgs/R_packages.png" alt="R Lifecycle">

Package lifecycle: install a package
========================================================

From CRAN/ local file

<font size = "5px">
```{r eval = F}
# Installing new packages
## Use the RSTUDIO IDE:
#    Tools->Install Packages...

## Use command line
install..packages("...")
```
</font>

From GitHub/ BitBucket

<font size = "5px">
```{r eval = F}
# Installing new packages

require(devtools)
install_github(repo = "", username = "...")

# Note! Sometime the repository contains source code
# then the proper compilers must be installed.
```
</font>

Package lifecycle: update a package
========================================================

From time to time packages must be updated...

<font size = "5px">
```{r eval = F}
# list all packages where an update is available
old.packages()

# update all available packages
update.packages()

# update, without prompts for permission/clarification
update.packages(ask = FALSE)

# update only a specific package use install.packages()
install.packages("plotly")
```
</font>


Package Management: load/ unload a package
========================================================

A package needs to be __loaded__ (only once) in a R session in order to be used

<font size = "5px">
```{r eval = F}
# Loading a package
#   resilient: return TRUE if done, otherwise FALSE
require(packageName)

#   throw an error if not done
library(packageName)

#   load the required function in the package
packageName::function
```
</font>

To __unload__ the package from the current R session

<font size = "5px">
```{r eval = F}
# unloading a package
detach("package:packageName")
```
</font>

Package lifecycle: remove a package
========================================================

<font size = "5px">
```{r eval = F}
## Use the RSTUDIO IDE - Packages tab

## Command line
remove.packages(...)
```
</font>

Getting Help
========================================================

There are many resources on the Internet and, because of its single-letter name, R is difficult to search for using general-purpose search engines such as Google.

- __Searching for more information and help__

    - The Comprehensive R Archive Network (CRAN) at http://cran.r-project.org/
    - The R Project home page, http://www.r-project.org/
        - See __Manuals__ section.
        - See __Search__ section.

    - Stack Overflow


- __Asking for help__

    - R email lists at http://www.r-project.org/mail.html.

Getting Help  (Cont'd)
========================================================

__The `help` function__ can be used to get online help.

<font size = "5px">
```{r eval = F}
# We want to get some more information about the args function
help(args)

# a shortcut...
?args

# working with special characters
?"+"
?"for"
```
</font>

__The `example` function__ can be used to run examples provided in the help entries.

<font size = "5px">
```{r eval = F}
# In most of the online help pages there is an Examples section
# with some examples on how to use what we have been searching for
# some examples can be run using the example function

example(args)

# Another example
# 'persp' draws perspective plots of a surface over the xâ€“y plane

example(persp)
```
</font>

Getting Help (Cont'd)
========================================================

If you do not know exactly what you are looking for `help.search` can be used to perform a Google-style search through R documentation.

<font size = "5px">
```{r eval = F}
help.search("multivariate normal")

# shortcut
??"multivariate normal"
```
</font>

If you want to access information related to a specific package...

<font size = "5px">
```{r eval = F}
help(package=dplyr)
```
</font>

Some other topics...

<font size = "5px">
```{r eval = F}
?files
?Arithmetic

# Arithmetic, Comparison, Control, Dates, Extract, files, Math, Memory, NA
# NULL, NumericaConstants, Paren, Quotes, Startup, Syntax
```
</font>

The [`sos`](https://cran.r-project.org/web/packages/sos/index.html) package offers highly sophisticated searching of R materials (instaled packages).

