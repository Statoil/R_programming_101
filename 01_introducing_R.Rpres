Introducing R
========================================================
author: Pier Lorenzo Paracchini
date: 20.09.2017
width: 1440
height: 900
font-import: http://fonts.googleapis.com/css?family=Risque
font-family: 'Risque'
transition: zoom

What is R?
========================================================

- An open source programming language mainly used for
    - __statistics__ and __data science__.

- A descendant of S (Bell Labs, 1976), __a dialect of S__
    - written primarily in C, fortran and R.

- Created at the University of Auckland (New Zealand)
    - the project was conceived in 1992,
    - an initial version (0.16) released in 1995 and
    - first stable version (1.0) for production use in 2000.

- Currently developed by
    - the __R Development Core Team__
    - under the __GNU General Public License__


R Philosophy (inherited from the S language)
========================================================

In "Stages in the Evolution of S", John Chambers writes:

> "[W]e wanted users to be able to begin in an interactive environment,
> where they did not consciously think of themselves as programming.
> Then as their needs became clearer and their sophistication increased,
> they should be able to slide gradually into programming, when the
> language and system aspects would become more important."

http://www.stat.bell-labs.com/S/history.html

Why R?
========================================================

- __Open source__ _programming language_ & _environment_ for
    - __statistical computing/ data science__.

- Run on almost any standard computing platform/OS (even on the PlayStation 3).

- Quite active development with frequent releases (annual + bugfix releases).

- Quite __lean__, functionality is divided into __modular packages__.

Why R? (Cont'd)
========================================================

- Great for __interactive work__, and a __powerful programming language__ for developing new tools.
    - shifting from _user_ to _programmer_

- Has a massive set of packages for
    - __statistical modelling/ data science__,
    - __visualisation__, and __data wrangling__.

- A __very active and vibrant user community__ (Stack Overflow, R-help mailing list, ...)
    - academic world and governments
    - companies (IBM, Microsoft, [RStudio](https://www.rstudio.com/), ...)
    - [RStudio Community](https://community.rstudio.com/), Stack Overflow, R mailing lists


Why R? (Cont'd)
========================================================

It is free, as __free software.__ Being free allows the following _freedoms_:

-   the freedom to run the program, for any purpose (__freedom 0__),

-   the freedom to study how the program works, and adapt it to your needs (__freedom 1__),

-   the freedom to redistribute copies so you can help your neighbor (__freedom 2__),

-   the freedom to improve the program, and release your improvements to the public, so that the whole community benefits (__freedom 3__).

https://www.r-project.org/Licenses/, http://www.fsf.org


Which are the drawbacks of R?
========================================================

- Based on __40 year old technology__, but __things are quickly changing__...
    - integration R and Spark: [`sparklyr`](https://spark.rstudio.com/) package
    - web application as data products: [shinyApps.io](https://www.shinyapps.io/) ([gallery](https://shiny.rstudio.com/gallery/))

- Development of new functionality is based on consumer demand and user contributions.
    - If no one feels like implementing your favorite method, then it's *your* job!
        - _Or you need to pay someone to do it_

- Much of the R code you'll see in the wild is __written in haste__ to solve a pressing problem
    - you need to be careful (esp. with GitHub repos)
    - but __things are changing__, more and more software developers are joining and...
        - unit testing (`testthat` package),
        - continuous building/ integration/ deployment ([travis CI](https://travis-ci.org/))

Which are the drawbacks of R? (Cont'd)
========================================================

- R is not a particularly fast programming language,
    - __poorly written R code can be terribly slow__
        - memory footprint,
        - processing time.

-   __Not a silver bullet__ -> not ideal for all possible situations.

