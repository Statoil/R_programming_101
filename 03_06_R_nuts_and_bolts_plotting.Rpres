Plotting
========================================================
author: Pier Lorenzo Paracchini
date: 20.09.2017
width: 1440
height: 900
font-import: http://fonts.googleapis.com/css?family=Risque
font-family: 'Risque'

Plotting Systems in R
========================================================

Graphics and plotting are used for primarily two reasons: explratory data analysis (EDA) and presenting results.

R provides excellent graphing capabilities through different plotting systems

- __Base Plotting System__, the traditional R plotting system automatically installed (`graphic` package - base R)
    - quite powerful and able to produce many kinds of graphics (+)
    - quite complex to use if more control over the details of graphic output is needed (-)

- __ggplot2__, an implementation of the '[grammar of graphic](http://ggplot2.org/resources/2007-vanderbilt.pdf)' (`ggplot2` package - non base R)

- others like __Lattice Graphics__...

Base Plotting System: The R Graphics Package
========================================================
<br/>
- Start with blank canvas and build up from there
- Add a plot function (or similar)
- Use annotation functions to add/modify what's on the canvas (`text`, `lines`, `points`, `axis`)

***
<br/>
- Convenient, mirrors how we think of building plots and analyzing data (+)

- Can't go back once plot has started (i.e. to adjust margins); need to plan in advance (-)

- Plot is just a series of R commands (*)


Base Plotting System: Examples
========================================================
<br/>
__Histogram__

<font size = "5px">
```{r baseHistogram, collapse = TRUE}
# graphics::hist()
hist(mtcars$mpg,
     breaks = c(5,10,15,20,25,30,35,40),
     main = "Miles Per Gallon Histogram", xlab = "Mpg")

```
</font>

***
<br/>
__Scatterplot__

<font size = "5px">
```{r baseScatterplot, collapse = TRUE}
# graphics::plot(x, y, ...)
plot(x = mtcars$wt, y = mtcars$mpg,
     main = "Mpg vs. Weight",
     xlab = "Weight (1000 lbs)",
     ylab = "Miles/(US) gallon")
```
</font>

Base Plotting System: Examples
========================================================
<br/>
__Boxplots__

<font size = "5px">
```{r baseBoxplot, collapse = TRUE}
# graphics::boxplot()
boxplot(mtcars$mpg, ylab = "Miles/(US) gallon")
```
</font>

***
<br/>
__Add more information...__

<font size = "5px">
```{r baseScatterplotWithExtra, collapse = TRUE}
# graphics::plot(x, y, ...)
plot(x = mtcars$wt, y = mtcars$mpg,
     main = "Mpg vs. Weight",
     xlab = "Weight (1000 lbs)",
     ylab = "Miles/(US) gallon")
lines(x = mtcars$wt, y = mtcars$mpg, type = "h")
```
</font>


Base Plotting System: Examples
========================================================

__Add more capability with more commands...__


<font size = "5px">
```{r baseComplex, collapse = TRUE}
# graphics::plot(x, y, ...)
with(mtcars,{
    plot(x = mtcars$wt, y = mtcars$mpg,  main = "Mpg vs. Weight",
     xlab = "Weight (1000 lbs)", ylab = "Miles/(US) gallon")
    plot(x = mtcars$hp, y = mtcars$mpg,  main = "Mpg vs. Gross horsepower",
     xlab = "Gross horsepower", ylab = "Miles/(US) gallon")
    mtext("Fuel Consumption Tests", outer = TRUE)
})
```
</font>

Hands-On (10 min)
========================================================

```r
library(swirl)
swirl()
#.....
# Select the "R Programming" entry
# Select the "Base Graphics" entry [15]
```

Plotting: Advanced graphics
========================================================

### __`ggplot2` graphic system__

- [examples](http://www.r-graph-gallery.com/portfolio/ggplot2-package/)
- Theory:
    - "[Basic plotting with R and ggplot2](https://pparacch.github.io/2017/07/06/plotting_in_R_ggplot2_part_1.html)", Part 1
    - "['ggplot2', essential concepts](https://pparacch.github.io/2017/07/14/plotting_in_R_ggplot2_part_2.html)", Part 2
    - "[Guidelines for good plots](https://pparacch.github.io/2017/07/18/plotting_in_R_ggplot2_part_3.html)", Part 3
    - "[How to work with maps](https://pparacch.github.io/2017/08/28/plotting_in_R_ggplot2_part_4.html)", Part 4

### __Plotly R Library__

Plotly's R graphing library makes interactive, publication-quality graphs online.

- [Documentation & Examples](https://plot.ly/r/)
